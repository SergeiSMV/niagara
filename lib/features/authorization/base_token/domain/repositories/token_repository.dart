import 'package:niagara_app/core/core.dart';

/// Репозиторий для управления токенами аутентификации.
///
/// Этот репозиторий отвечает за создание и получение токенов аутентификации
/// пользователя. Он взаимодействует с удаленным и локальным источниками данных.
abstract interface class ITokenRepository {
  /// Создает новый токен аутентификации.
  ///
  /// Этот метод взаимодействует с удаленным источником данных для получения
  /// нового токена и затем сохраняет токен в локальном источнике данных.
  ///
  /// Возвращает:
  ///   - [Right<void>] если токен был успешно создан и сохранен.
  ///   - [Left<Failure>] если произошла ошибка во время процесса создания
  /// токена.
  Future<Either<Failure, void>> createToken();

  /// Получает сохраненный токен аутентификации.
  ///
  /// Этот метод получает токен из локального источника данных.
  ///
  /// Возвращает:
  ///   - [Right<String>] содержащий сохраненный токен.
  ///   - [Left<Failure>] если токен не найден или произошла ошибка.
  Future<Either<Failure, String>> getToken();

  /// Удаляет сохраненный токен аутентификации.
  ///
  /// Этот метод удаляет токен из локального источника данных.
  ///
  /// Возвращает:
  ///   - [Right<void>] если токен был успешно удален.
  ///   - [Left<Failure>] если произошла ошибка во время процесса удаления
  ///     токена.
  Future<Either<Failure, void>> deleteToken();
}
