// Mocks generated by Mockito 5.4.4 from annotations
// in niagara_app/test/common/domain/repositories/token_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:either_dart/either.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:niagara_app/core/common/data/models/token.dart' as _i6;
import 'package:niagara_app/core/core.dart' as _i2;
import 'package:talker_flutter/talker_flutter.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ITokenRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockITokenRemoteDataSource extends _i1.Mock
    implements _i2.ITokenRemoteDataSource {
  @override
  _i3.Future<_i4.Either<_i2.Failure, String>> onGetToken(
          {required String? deviceId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onGetToken,
          [],
          {#deviceId: deviceId},
        ),
        returnValue: _i3.Future<_i4.Either<_i2.Failure, String>>.value(
            _i5.dummyValue<_i4.Either<_i2.Failure, String>>(
          this,
          Invocation.method(
            #onGetToken,
            [],
            {#deviceId: deviceId},
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i2.Failure, String>>.value(
                _i5.dummyValue<_i4.Either<_i2.Failure, String>>(
          this,
          Invocation.method(
            #onGetToken,
            [],
            {#deviceId: deviceId},
          ),
        )),
      ) as _i3.Future<_i4.Either<_i2.Failure, String>>);

  @override
  _i3.Future<_i4.Either<_i2.Failure, _i6.TokenModel>> onCheckToken(
          {required String? token}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCheckToken,
          [],
          {#token: token},
        ),
        returnValue: _i3.Future<_i4.Either<_i2.Failure, _i6.TokenModel>>.value(
            _i5.dummyValue<_i4.Either<_i2.Failure, _i6.TokenModel>>(
          this,
          Invocation.method(
            #onCheckToken,
            [],
            {#token: token},
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i2.Failure, _i6.TokenModel>>.value(
                _i5.dummyValue<_i4.Either<_i2.Failure, _i6.TokenModel>>(
          this,
          Invocation.method(
            #onCheckToken,
            [],
            {#token: token},
          ),
        )),
      ) as _i3.Future<_i4.Either<_i2.Failure, _i6.TokenModel>>);
}

/// A class which mocks [ITokenLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockITokenLocalDataSource extends _i1.Mock
    implements _i2.ITokenLocalDataSource {
  @override
  _i3.Future<void> onSetToken({required String? token}) => (super.noSuchMethod(
        Invocation.method(
          #onSetToken,
          [],
          {#token: token},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String?> onGetToken() => (super.noSuchMethod(
        Invocation.method(
          #onGetToken,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> onDeleteToken() => (super.noSuchMethod(
        Invocation.method(
          #onDeleteToken,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> onGetDeviceId() => (super.noSuchMethod(
        Invocation.method(
          #onGetDeviceId,
          [],
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #onGetDeviceId,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #onGetDeviceId,
            [],
          ),
        )),
      ) as _i3.Future<String>);
}

/// A class which mocks [IAppLogger].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAppLogger extends _i1.Mock implements _i2.IAppLogger {
  @override
  void log({
    required _i7.LogLevel? level,
    required String? message,
    Object? error,
    StackTrace? stackTrace,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #log,
          [],
          {
            #level: level,
            #message: message,
            #error: error,
            #stackTrace: stackTrace,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handle(
    Object? error, [
    StackTrace? stackTrace,
    dynamic msg,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #handle,
          [
            error,
            stackTrace,
            msg,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
